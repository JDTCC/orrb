// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: orrb/protos/RendererConfig.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Orrb {

  /// <summary>Holder for reflection information generated from orrb/protos/RendererConfig.proto</summary>
  public static partial class RendererConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for orrb/protos/RendererConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RendererConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBvcnJiL3Byb3Rvcy9SZW5kZXJlckNvbmZpZy5wcm90bxIEb3JyYiIzCgVD",
            "b2xvchIJCgFyGAEgASgCEgkKAWcYAiABKAISCQoBYhgDIAEoAhIJCgFhGAQg",
            "ASgCIjgKClF1YXRlcm5pb24SCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoY",
            "AyABKAISCQoBdxgEIAEoAiIqCgdWZWN0b3IzEgkKAXgYASABKAISCQoBeRgC",
            "IAEoAhIJCgF6GAMgASgCIh8KB1ZlY3RvcjISCQoBeBgBIAEoAhIJCgF5GAIg",
            "ASgCInEKDlJlbmRlcmVyQ29uZmlnEhYKDm1vZGVsX3htbF9wYXRoGAEgASgJ",
            "EhoKEm1vZGVsX21hcHBpbmdfcGF0aBgCIAEoCRIrCgpjb21wb25lbnRzGAMg",
            "AygLMhcub3JyYi5SZW5kZXJlckNvbXBvbmVudCJsChFSZW5kZXJlckNvbXBv",
            "bmVudBIMCgR0eXBlGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEcGF0aBgDIAEo",
            "CRItCgZjb25maWcYBCABKAsyHS5vcnJiLlJlbmRlcmVyQ29tcG9uZW50Q29u",
            "ZmlnIp4KChdSZW5kZXJlckNvbXBvbmVudENvbmZpZxJICg5pbnRfcHJvcGVy",
            "dGllcxgBIAMoCzIwLm9ycmIuUmVuZGVyZXJDb21wb25lbnRDb25maWcuSW50",
            "UHJvcGVydGllc0VudHJ5EkwKEGZsb2F0X3Byb3BlcnRpZXMYAiADKAsyMi5v",
            "cnJiLlJlbmRlcmVyQ29tcG9uZW50Q29uZmlnLkZsb2F0UHJvcGVydGllc0Vu",
            "dHJ5Ek4KEXN0cmluZ19wcm9wZXJ0aWVzGAMgAygLMjMub3JyYi5SZW5kZXJl",
            "ckNvbXBvbmVudENvbmZpZy5TdHJpbmdQcm9wZXJ0aWVzRW50cnkSSgoPYm9v",
            "bF9wcm9wZXJ0aWVzGAQgAygLMjEub3JyYi5SZW5kZXJlckNvbXBvbmVudENv",
            "bmZpZy5Cb29sUHJvcGVydGllc0VudHJ5ElYKFXF1YXRlcm5pb25fcHJvcGVy",
            "dGllcxgFIAMoCzI3Lm9ycmIuUmVuZGVyZXJDb21wb25lbnRDb25maWcuUXVh",
            "dGVybmlvblByb3BlcnRpZXNFbnRyeRJQChJ2ZWN0b3IzX3Byb3BlcnRpZXMY",
            "BiADKAsyNC5vcnJiLlJlbmRlcmVyQ29tcG9uZW50Q29uZmlnLlZlY3RvcjNQ",
            "cm9wZXJ0aWVzRW50cnkSUAoSdmVjdG9yMl9wcm9wZXJ0aWVzGAcgAygLMjQu",
            "b3JyYi5SZW5kZXJlckNvbXBvbmVudENvbmZpZy5WZWN0b3IyUHJvcGVydGll",
            "c0VudHJ5EkoKD2VudW1fcHJvcGVydGllcxgIIAMoCzIxLm9ycmIuUmVuZGVy",
            "ZXJDb21wb25lbnRDb25maWcuRW51bVByb3BlcnRpZXNFbnRyeRJMChBjb2xv",
            "cl9wcm9wZXJ0aWVzGAkgAygLMjIub3JyYi5SZW5kZXJlckNvbXBvbmVudENv",
            "bmZpZy5Db2xvclByb3BlcnRpZXNFbnRyeRo0ChJJbnRQcm9wZXJ0aWVzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ARo2ChRGbG9hdFBy",
            "b3BlcnRpZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAI6AjgB",
            "GjcKFVN0cmluZ1Byb3BlcnRpZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAk6AjgBGjUKE0Jvb2xQcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgIOgI4ARpNChlRdWF0ZXJuaW9uUHJvcGVydGll",
            "c0VudHJ5EgsKA2tleRgBIAEoCRIfCgV2YWx1ZRgCIAEoCzIQLm9ycmIuUXVh",
            "dGVybmlvbjoCOAEaRwoWVmVjdG9yM1Byb3BlcnRpZXNFbnRyeRILCgNrZXkY",
            "ASABKAkSHAoFdmFsdWUYAiABKAsyDS5vcnJiLlZlY3RvcjM6AjgBGkcKFlZl",
            "Y3RvcjJQcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEhwKBXZhbHVlGAIg",
            "ASgLMg0ub3JyYi5WZWN0b3IyOgI4ARo1ChNFbnVtUHJvcGVydGllc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaQwoUQ29sb3JQcm9w",
            "ZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEhoKBXZhbHVlGAIgASgLMgsub3Jy",
            "Yi5Db2xvcjoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.Color), global::Orrb.Color.Parser, new[]{ "R", "G", "B", "A" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.Quaternion), global::Orrb.Quaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.Vector3), global::Orrb.Vector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.Vector2), global::Orrb.Vector2.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.RendererConfig), global::Orrb.RendererConfig.Parser, new[]{ "ModelXmlPath", "ModelMappingPath", "Components" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.RendererComponent), global::Orrb.RendererComponent.Parser, new[]{ "Type", "Name", "Path", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Orrb.RendererComponentConfig), global::Orrb.RendererComponentConfig.Parser, new[]{ "IntProperties", "FloatProperties", "StringProperties", "BoolProperties", "QuaternionProperties", "Vector3Properties", "Vector2Properties", "EnumProperties", "ColorProperties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, null, null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Color : pb::IMessage<Color> {
    private static readonly pb::MessageParser<Color> _parser = new pb::MessageParser<Color>(() => new Color());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Color> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color(Color other) : this() {
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      a_ = other.a_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Color Clone() {
      return new Color(this);
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 1;
    private float r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 2;
    private float g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 3;
    private float b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 4;
    private float a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Color);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Color other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A, other.A)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
      if (G != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
      if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
      if (A != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (A != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (R != 0F) {
        size += 1 + 4;
      }
      if (G != 0F) {
        size += 1 + 4;
      }
      if (B != 0F) {
        size += 1 + 4;
      }
      if (A != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Color other) {
      if (other == null) {
        return;
      }
      if (other.R != 0F) {
        R = other.R;
      }
      if (other.G != 0F) {
        G = other.G;
      }
      if (other.B != 0F) {
        B = other.B;
      }
      if (other.A != 0F) {
        A = other.A;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
          case 37: {
            A = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Quaternion : pb::IMessage<Quaternion> {
    private static readonly pb::MessageParser<Quaternion> _parser = new pb::MessageParser<Quaternion>(() => new Quaternion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Quaternion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quaternion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quaternion(Quaternion other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quaternion Clone() {
      return new Quaternion(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Quaternion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Quaternion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (W != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Quaternion other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector3 : pb::IMessage<Vector3> {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector2 : pb::IMessage<Vector2> {
    private static readonly pb::MessageParser<Vector2> _parser = new pb::MessageParser<Vector2>(() => new Vector2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2(Vector2 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2 Clone() {
      return new Vector2(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RendererConfig : pb::IMessage<RendererConfig> {
    private static readonly pb::MessageParser<RendererConfig> _parser = new pb::MessageParser<RendererConfig>(() => new RendererConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RendererConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererConfig(RendererConfig other) : this() {
      modelXmlPath_ = other.modelXmlPath_;
      modelMappingPath_ = other.modelMappingPath_;
      components_ = other.components_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererConfig Clone() {
      return new RendererConfig(this);
    }

    /// <summary>Field number for the "model_xml_path" field.</summary>
    public const int ModelXmlPathFieldNumber = 1;
    private string modelXmlPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelXmlPath {
      get { return modelXmlPath_; }
      set {
        modelXmlPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_mapping_path" field.</summary>
    public const int ModelMappingPathFieldNumber = 2;
    private string modelMappingPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelMappingPath {
      get { return modelMappingPath_; }
      set {
        modelMappingPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Orrb.RendererComponent> _repeated_components_codec
        = pb::FieldCodec.ForMessage(26, global::Orrb.RendererComponent.Parser);
    private readonly pbc::RepeatedField<global::Orrb.RendererComponent> components_ = new pbc::RepeatedField<global::Orrb.RendererComponent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Orrb.RendererComponent> Components {
      get { return components_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RendererConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RendererConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelXmlPath != other.ModelXmlPath) return false;
      if (ModelMappingPath != other.ModelMappingPath) return false;
      if(!components_.Equals(other.components_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelXmlPath.Length != 0) hash ^= ModelXmlPath.GetHashCode();
      if (ModelMappingPath.Length != 0) hash ^= ModelMappingPath.GetHashCode();
      hash ^= components_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelXmlPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelXmlPath);
      }
      if (ModelMappingPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelMappingPath);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelXmlPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelXmlPath);
      }
      if (ModelMappingPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelMappingPath);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RendererConfig other) {
      if (other == null) {
        return;
      }
      if (other.ModelXmlPath.Length != 0) {
        ModelXmlPath = other.ModelXmlPath;
      }
      if (other.ModelMappingPath.Length != 0) {
        ModelMappingPath = other.ModelMappingPath;
      }
      components_.Add(other.components_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ModelXmlPath = input.ReadString();
            break;
          }
          case 18: {
            ModelMappingPath = input.ReadString();
            break;
          }
          case 26: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RendererComponent : pb::IMessage<RendererComponent> {
    private static readonly pb::MessageParser<RendererComponent> _parser = new pb::MessageParser<RendererComponent>(() => new RendererComponent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RendererComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponent(RendererComponent other) : this() {
      type_ = other.type_;
      name_ = other.name_;
      path_ = other.path_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponent Clone() {
      return new RendererComponent(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 4;
    private global::Orrb.RendererComponentConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Orrb.RendererComponentConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RendererComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RendererComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RendererComponent other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Orrb.RendererComponentConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (config_ == null) {
              Config = new global::Orrb.RendererComponentConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RendererComponentConfig : pb::IMessage<RendererComponentConfig> {
    private static readonly pb::MessageParser<RendererComponentConfig> _parser = new pb::MessageParser<RendererComponentConfig>(() => new RendererComponentConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RendererComponentConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Orrb.RendererConfigReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponentConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponentConfig(RendererComponentConfig other) : this() {
      intProperties_ = other.intProperties_.Clone();
      floatProperties_ = other.floatProperties_.Clone();
      stringProperties_ = other.stringProperties_.Clone();
      boolProperties_ = other.boolProperties_.Clone();
      quaternionProperties_ = other.quaternionProperties_.Clone();
      vector3Properties_ = other.vector3Properties_.Clone();
      vector2Properties_ = other.vector2Properties_.Clone();
      enumProperties_ = other.enumProperties_.Clone();
      colorProperties_ = other.colorProperties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RendererComponentConfig Clone() {
      return new RendererComponentConfig(this);
    }

    /// <summary>Field number for the "int_properties" field.</summary>
    public const int IntPropertiesFieldNumber = 1;
    private static readonly pbc::MapField<string, int>.Codec _map_intProperties_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 10);
    private readonly pbc::MapField<string, int> intProperties_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> IntProperties {
      get { return intProperties_; }
    }

    /// <summary>Field number for the "float_properties" field.</summary>
    public const int FloatPropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, float>.Codec _map_floatProperties_codec
        = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForFloat(21), 18);
    private readonly pbc::MapField<string, float> floatProperties_ = new pbc::MapField<string, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, float> FloatProperties {
      get { return floatProperties_; }
    }

    /// <summary>Field number for the "string_properties" field.</summary>
    public const int StringPropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_stringProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> stringProperties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> StringProperties {
      get { return stringProperties_; }
    }

    /// <summary>Field number for the "bool_properties" field.</summary>
    public const int BoolPropertiesFieldNumber = 4;
    private static readonly pbc::MapField<string, bool>.Codec _map_boolProperties_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBool(16), 34);
    private readonly pbc::MapField<string, bool> boolProperties_ = new pbc::MapField<string, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> BoolProperties {
      get { return boolProperties_; }
    }

    /// <summary>Field number for the "quaternion_properties" field.</summary>
    public const int QuaternionPropertiesFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Orrb.Quaternion>.Codec _map_quaternionProperties_codec
        = new pbc::MapField<string, global::Orrb.Quaternion>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Orrb.Quaternion.Parser), 42);
    private readonly pbc::MapField<string, global::Orrb.Quaternion> quaternionProperties_ = new pbc::MapField<string, global::Orrb.Quaternion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Orrb.Quaternion> QuaternionProperties {
      get { return quaternionProperties_; }
    }

    /// <summary>Field number for the "vector3_properties" field.</summary>
    public const int Vector3PropertiesFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Orrb.Vector3>.Codec _map_vector3Properties_codec
        = new pbc::MapField<string, global::Orrb.Vector3>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Orrb.Vector3.Parser), 50);
    private readonly pbc::MapField<string, global::Orrb.Vector3> vector3Properties_ = new pbc::MapField<string, global::Orrb.Vector3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Orrb.Vector3> Vector3Properties {
      get { return vector3Properties_; }
    }

    /// <summary>Field number for the "vector2_properties" field.</summary>
    public const int Vector2PropertiesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Orrb.Vector2>.Codec _map_vector2Properties_codec
        = new pbc::MapField<string, global::Orrb.Vector2>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Orrb.Vector2.Parser), 58);
    private readonly pbc::MapField<string, global::Orrb.Vector2> vector2Properties_ = new pbc::MapField<string, global::Orrb.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Orrb.Vector2> Vector2Properties {
      get { return vector2Properties_; }
    }

    /// <summary>Field number for the "enum_properties" field.</summary>
    public const int EnumPropertiesFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_enumProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 66);
    private readonly pbc::MapField<string, string> enumProperties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> EnumProperties {
      get { return enumProperties_; }
    }

    /// <summary>Field number for the "color_properties" field.</summary>
    public const int ColorPropertiesFieldNumber = 9;
    private static readonly pbc::MapField<string, global::Orrb.Color>.Codec _map_colorProperties_codec
        = new pbc::MapField<string, global::Orrb.Color>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Orrb.Color.Parser), 74);
    private readonly pbc::MapField<string, global::Orrb.Color> colorProperties_ = new pbc::MapField<string, global::Orrb.Color>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Orrb.Color> ColorProperties {
      get { return colorProperties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RendererComponentConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RendererComponentConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IntProperties.Equals(other.IntProperties)) return false;
      if (!FloatProperties.Equals(other.FloatProperties)) return false;
      if (!StringProperties.Equals(other.StringProperties)) return false;
      if (!BoolProperties.Equals(other.BoolProperties)) return false;
      if (!QuaternionProperties.Equals(other.QuaternionProperties)) return false;
      if (!Vector3Properties.Equals(other.Vector3Properties)) return false;
      if (!Vector2Properties.Equals(other.Vector2Properties)) return false;
      if (!EnumProperties.Equals(other.EnumProperties)) return false;
      if (!ColorProperties.Equals(other.ColorProperties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IntProperties.GetHashCode();
      hash ^= FloatProperties.GetHashCode();
      hash ^= StringProperties.GetHashCode();
      hash ^= BoolProperties.GetHashCode();
      hash ^= QuaternionProperties.GetHashCode();
      hash ^= Vector3Properties.GetHashCode();
      hash ^= Vector2Properties.GetHashCode();
      hash ^= EnumProperties.GetHashCode();
      hash ^= ColorProperties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      intProperties_.WriteTo(output, _map_intProperties_codec);
      floatProperties_.WriteTo(output, _map_floatProperties_codec);
      stringProperties_.WriteTo(output, _map_stringProperties_codec);
      boolProperties_.WriteTo(output, _map_boolProperties_codec);
      quaternionProperties_.WriteTo(output, _map_quaternionProperties_codec);
      vector3Properties_.WriteTo(output, _map_vector3Properties_codec);
      vector2Properties_.WriteTo(output, _map_vector2Properties_codec);
      enumProperties_.WriteTo(output, _map_enumProperties_codec);
      colorProperties_.WriteTo(output, _map_colorProperties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += intProperties_.CalculateSize(_map_intProperties_codec);
      size += floatProperties_.CalculateSize(_map_floatProperties_codec);
      size += stringProperties_.CalculateSize(_map_stringProperties_codec);
      size += boolProperties_.CalculateSize(_map_boolProperties_codec);
      size += quaternionProperties_.CalculateSize(_map_quaternionProperties_codec);
      size += vector3Properties_.CalculateSize(_map_vector3Properties_codec);
      size += vector2Properties_.CalculateSize(_map_vector2Properties_codec);
      size += enumProperties_.CalculateSize(_map_enumProperties_codec);
      size += colorProperties_.CalculateSize(_map_colorProperties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RendererComponentConfig other) {
      if (other == null) {
        return;
      }
      intProperties_.Add(other.intProperties_);
      floatProperties_.Add(other.floatProperties_);
      stringProperties_.Add(other.stringProperties_);
      boolProperties_.Add(other.boolProperties_);
      quaternionProperties_.Add(other.quaternionProperties_);
      vector3Properties_.Add(other.vector3Properties_);
      vector2Properties_.Add(other.vector2Properties_);
      enumProperties_.Add(other.enumProperties_);
      colorProperties_.Add(other.colorProperties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            intProperties_.AddEntriesFrom(input, _map_intProperties_codec);
            break;
          }
          case 18: {
            floatProperties_.AddEntriesFrom(input, _map_floatProperties_codec);
            break;
          }
          case 26: {
            stringProperties_.AddEntriesFrom(input, _map_stringProperties_codec);
            break;
          }
          case 34: {
            boolProperties_.AddEntriesFrom(input, _map_boolProperties_codec);
            break;
          }
          case 42: {
            quaternionProperties_.AddEntriesFrom(input, _map_quaternionProperties_codec);
            break;
          }
          case 50: {
            vector3Properties_.AddEntriesFrom(input, _map_vector3Properties_codec);
            break;
          }
          case 58: {
            vector2Properties_.AddEntriesFrom(input, _map_vector2Properties_codec);
            break;
          }
          case 66: {
            enumProperties_.AddEntriesFrom(input, _map_enumProperties_codec);
            break;
          }
          case 74: {
            colorProperties_.AddEntriesFrom(input, _map_colorProperties_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
